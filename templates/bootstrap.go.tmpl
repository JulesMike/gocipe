package main

import (
	"database/sql"
	"log"
	"os"

	"github.com/joho/godotenv"
	_ "github.com/lib/pq"
)

const (
	//EnvironmentProd represents production environment
	EnvironmentProd = "PROD"

	//EnvironmentDev represents development environment
	EnvironmentDev  = "DEV"
)

var (
	env string
	{{if not .Bootstrap.NoDB}}db  *sql.DB{{end}}
	{{if .HTTP.Generate}}httpPort string{{end}}
	{{range .Bootstrap.Settings}}
	// {{.Name}} {{.Description}}
	{{.Name}} string
	{{end}}
)

func bootstrap() {
	godotenv.Load()
	env = os.Getenv("ENV")

	if env == "" {
		env = EnvironmentProd
	}

	{{if not .Bootstrap.NoDB}}
	dsn := os.Getenv("DSN")
	if dsn == "" {
		log.Fatal("Environment variable DSN must be defined. Example: postgres://user:pass@host/db?sslmode=disable")
	}

	var err error
	db, err = sql.Open("postgres", dsn)
	if err == nil {
		log.Println("Connected to database successfully.")
	} else if (env == EnvironmentDev) {
		log.Println("Database connection failed: ", err)
	} else {
		log.Fatal("Database connection failed: ", err)
	}

	err = db.Ping()
	if err == nil {
		log.Println("Pinged database successfully.")
	} else if (env == EnvironmentDev) {
		log.Println("Database ping failed: ", err)
	} else {
		log.Fatal("Database ping failed: ", err)
	}
	{{end}}

	{{if .HTTP.Generate}}
	httpPort = os.Getenv("HTTP_PORT")
	if httpPort == "" {
		httpPort = "{{.HTTP.Port}}"
	}
	{{end}}

	{{range .Bootstrap.Settings}}
	// {{.Name}} {{.Description}}
	{{.Name}} = os.Getenv("{{upper (snake .Name)}}")
	if {{.Name}} == "" {
		log.Fatal("Environment variable {{upper (snake .Name)}} ({{.Description}}) must be defined.")
	}
	{{end}}
}