#!/bin/bash

CURRENT_DIR=`pwd`

if [ "$1" == "" ]; then
    echo "Enter a valid filename"
	exit 1
fi

if [ ! -d "${CURRENT_DIR}/vendor" ]; then
    echo "vendor folder not found in ${CURRENT_DIR}"
    echo "Running dep init"
    dep init
fi

if [ ! -f "${CURRENT_DIR}/web/package.json" ]; then
    echo "package.json file not found in ${CURRENT_DIR}/web"
    echo "Running npm init"
    cd "${CURRENT_DIR}/web"
    npm init --yes
fi

if [ ! -d "${CURRENT_DIR}/web/node_modules/" ]; then
    echo "node_modules dir not found in ${CURRENT_DIR}/web"
    echo "Running npm init"
    cd "${CURRENT_DIR}/web"
    npm init --yes
fi

if [ ! -d "${CURRENT_DIR}/web/node_modules/.bin" ]; then
    echo ".bin not found dir in ${CURRENT_DIR}/web/node_modules"
    echo "Running npm init"
    cd "${CURRENT_DIR}/web"
    npm init --yes
fi

if [ ! -f "${CURRENT_DIR}/web/node_modules/.bin/protoc-gen-ts" ]; then
    echo "protoc-gen-ts executable not found in ${CURRENT_DIR}/web/node_modules/.bin"
    echo "Running npm install --save-dev ts-protoc-gen"
    cd "${CURRENT_DIR}/web"
    npm install --save-dev ts-protoc-gen
fi

if [ ! -d {{.GeneratePath}}/${1} ]; then
    mkdir -p {{.GeneratePath}}/${1}
fi

cd ${CURRENT_DIR}
protoc -I "${CURRENT_DIR}/proto" "${CURRENT_DIR}/proto/service_${1}.proto" --go_out=plugins=grpc:{{.GeneratePath}}/${1}

if [ -f "${CURRENT_DIR}/proto/models.proto" ]; then
    protoc -I "${CURRENT_DIR}/proto" \
    --plugin="protoc-gen-ts=${CURRENT_DIR}/web/node_modules/.bin/protoc-gen-ts" \
    --js_out="import_style=commonjs,binary:${CURRENT_DIR}/web/src/services" \
    --ts_out="${CURRENT_DIR}/web/src/services" "${CURRENT_DIR}/proto/models.proto"
fi

protoc -I "${CURRENT_DIR}/proto" \
    --plugin="protoc-gen-ts=${CURRENT_DIR}/web/node_modules/.bin/protoc-gen-ts" \
    --js_out="import_style=commonjs,binary:${CURRENT_DIR}/web/src/services" \
    --ts_out="service=true:${CURRENT_DIR}/web/src/services" "${CURRENT_DIR}/proto/service_${1}.proto"