// LoadRelated{{.PropertyName}} is a helper function to load related {{.PropertyName}} entities
func LoadRelated{{.PropertyName}}(ctx context.Context, entities []{{.EntityName}}) ([]{{.EntityName}}, error) {
	var (
		placeholder string
		values  []interface{}
		indices map[{{pkeyPropertyType .PrimaryKey}}]{{trimPrefix .PropertyType "[]"}}
		idthis  {{pkeyPropertyType .PrimaryKey}}
		idthat  {{trimPrefix .PropertyType "[]"}}
		items   []{{.EntityName}}
	)

	select {
	case <-ctx.Done():
		return nil, ctx.Err()
	default:
		break
	}

	c := 1
	for i, entity := range entities {
		placeholder += "$" + strconv.Itoa(c) + ","
		indices[entity.ID] = entity
		values = append(values, i)
		c++
	}
	placeholder = strings.TrimRight(placeholder, ",")

	rows, err := repo.db.Query("SELECT {{.ThisID}}, {{.ThatID}} FROM {{.Table}} WHERE {{.ThisID}} IN ("+placeholder+")", values...)
	if err != nil {
		return err
	}

	select {
	case <-ctx.Done():
		return nil, ctx.Err()
	default:
		break
	}

	for rows.Next() {
		err = rows.Scan(&idthis, &idthat)
		if err != nil {
			return err
		}
		indices[idthis].{{.PropertyName}} = append(*indexID[idthis].{{.PropertyName}}, idthat)
	}

	return nil
}